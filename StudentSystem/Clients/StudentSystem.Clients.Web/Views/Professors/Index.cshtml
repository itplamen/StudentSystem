@using StudentSystem.Clients.Web.Models.Professors

@model IEnumerable<ProfessorResponseViewModel>
@{
    ViewBag.Title = "Professors";
}

<style>
    label, input {
        display: block;
    }
    
    input.text {
        margin-bottom: 12px;
        width: 95%;
        padding: .4em;
    }

    fieldset {
        padding: 0;
        border: 0;
        margin-top: 25px;
    }

    .ui-dialog {
        padding: .3em;
    }

    #create {
        margin-bottom: 10px;
    }
</style>

<button id="create">Create</button>

<table id="ProfessorsTable" class="dataTable">
    <thead>
        <tr>
            <th>Details</th>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Created On</th>
            <th>Modified On</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var professor in Model)
        {
            <tr>
                <td class="professor-details"><img class="details-img" src="~/Content/Images/details_open.png" /></td>
                <td class="professor-id">@professor.Id</td>
                <td class="professor-first-name">@professor.FirstName</td>
                <td class="professor-last-name">@professor.LastName</td>
                <td>@professor.CreatedOn</td>
                <td>@professor.ModifiedOn</td>
                <td>
                    <button class="update ui-button ui-corner-all">Update</button>
                    <button class="delete ui-button ui-corner-all">Delete </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="dialog-form">
    <form>
        <fieldset>
            <label for="first-name">First Name</label>
            <input type="text" name="first-name" id="first-name" class="text ui-widget-content ui-corner-all">

            <label for="last-name">Last Name</label>
            <input type="text" name="last-name" id="last-name" class="text ui-widget-content ui-corner-all">
        </fieldset>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let professorsTable = $('#ProfessorsTable').DataTable({
                "sPaginationType": "full_numbers",
                "aaSorting": [[0, 'asc']],
            });

            let dialog = $("#dialog-form").dialog({
                autoOpen: false,
                height: 300,
                width: 350,
                modal: true,
                close: clearForm
            });

            function clearForm() {
                $('#first-name').val('');
                $('#last-name').val('');
            }

            $("#create").button().on("click", function () {
                dialog.dialog("option", "title", "Create new professor");
                dialog.dialog("option", "buttons",
                    [
                        {
                            text: "Create",
                            click: function() {
                                const requestModel = {
                                    FirstName: $('#first-name').val(),
                                    LastName: $('#last-name').val()
                                };

                                studentSystemApi.post('/Professors/Create', requestModel, successfullyCreatedProfessor);
                                clearForm();

                                dialog.dialog("close");
                            }
                        },
                        {
                            text: "Close",
                            click: function () {
                                dialog.dialog("close");
                            }
                        }
                    ]
                );

                dialog.dialog("open");
            });

            $(".update").click(function () {
                let column = $(this).parent();
                
                $('#first-name').val(column.siblings('.professor-first-name').html());
                $('#last-name').val(column.siblings('.professor-last-name').html());

                dialog.dialog("option", "title", "Update professor")
                dialog.dialog("option", "buttons",
                    [
                        {
                            text: "Update",
                            click: function () {
                                const requestModel = {
                                    Id: column.siblings('.professor-id').html(),
                                    FirstName: $('#first-name').val(),
                                    LastName: $('#last-name').val()
                                };

                                studentSystemApi.post('/Professors/Update', requestModel, successfullyUpdatedProfessor, column.parent().index());
                                clearForm();

                                dialog.dialog("close");
                            }
                        },
                        {
                            text: "Close",
                            click: function () {
                                dialog.dialog("close");
                            }
                        }
                    ]
                );

                dialog.dialog("open");
            });
            
            $('.delete').on("click", function () {
                let row = $(this).parent();
                let professorId = row.siblings('.professor-id').html();

                studentSystemApi.post('/Professors/Delete', { "Id": professorId }, successfullyDeletedProfessor, row);
            });

            function successfullyCreatedProfessor(data) {
                professorsTable.fnAddData([
                    '<td class="professor-details"><img class="details-img" src="../Content/Images/details_open.png" /></td>',
                    data.Id,
                    data.FirstName,
                    data.LastName,
                    data.CreatedOn,
                    data.ModifiedOn,
                    '<td><button class="update ui-button ui-corner-all">Update</button><button class="delete ui-button ui-corner-all">Delete </button></td>']);

                alert('Sucessfully created new professor!');
            }

            function successfullyUpdatedProfessor(data, rowIndex) {
                let professorsTable = $('#ProfessorsTable').DataTable();

                professorsTable.fnUpdate(data.FirstName, rowIndex, 2);
                professorsTable.fnUpdate(data.LastName, rowIndex, 3);
                professorsTable.fnUpdate(data.ModifiedOn, rowIndex, 5);

                alert('Sucessfully updated professor!');
            }

            function successfullyDeletedProfessor(isDeleted, row) {
                if (isDeleted == true) {
                    professorsTable.fnDeleteRow(row.parent()[0]);

                    alert('Sucessfully deleted professor!');
                }
            }

            function formatDetails(data, detailsRow) {
                let result = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
              
                if (data.Disciplines) {
                    $(data.Disciplines).each(function (index, value) {
                        result += '<tr><td>Discipline | Semester:</td><td>' + value.Name + ' | ' + value.Semester.Name + '</td></tr>';
                    })
                }
                else {
                    result += '<tr><td>Could not find any disciplines</td></tr>';
                }

                result += '</table>';

                professorsTable.fnOpen(detailsRow, result, 'details');   
            }

            $('#ProfessorsTable tbody .professor-details').on('click', function () {
                let detailsRow = $(this).parents('tr')[0];
                let professorId = $(detailsRow).children('.professor-id').html();
                let image = $(detailsRow).children('.professor-details').children('.details-img')[0];

                if (professorsTable.fnIsOpen(detailsRow)) {
                    image.src = "../Content/Images/details_open.png";
                    professorsTable.fnClose(detailsRow);
                }
                else {
                    image.src = '../Content/Images/details_close.png';
                    studentSystemApi.get('/Professors/Get', { Id: professorId }, formatDetails, detailsRow);              
                }
            });
        });

    </script>
}