@using StudentSystem.Clients.Web.Models.Professors

@model IEnumerable<ProfessorResponseViewModel>
@{
    ViewBag.Title = "Professors";
}

<style>
    label, input {
        display: block;
    }
    
    input.text {
        margin-bottom: 12px;
        width: 95%;
        padding: .4em;
    }

    fieldset {
        padding: 0;
        border: 0;
        margin-top: 25px;
    }

    .ui-dialog {
        padding: .3em;
    }

    #create {
        margin-bottom: 10px;
    }
</style>

<button id="create">Create</button>

<table id="ProfessorsTable" class="dataTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Created On</th>
            <th>Modified On</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var professor in Model)
        {
            <tr>
                <td class="professor-id">@professor.Id</td>
                <td class="professor-first-name">@professor.FirstName</td>
                <td class="professor-last-name">@professor.LastName</td>
                <td>@professor.CreatedOn</td>
                <td>@professor.ModifiedOn</td>
                <td>
                    <button class="update ui-button ui-corner-all">Update</button>
                    <button class="delete ui-button ui-corner-all">Delete </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="dialog-form">
    <form>
        <fieldset>
            <label for="first-name">First Name</label>
            <input type="text" name="first-name" id="first-name" class="text ui-widget-content ui-corner-all">

            <label for="last-name">Last Name</label>
            <input type="text" name="last-name" id="last-name" class="text ui-widget-content ui-corner-all">
        </fieldset>
    </form>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let professorsTable = $('#ProfessorsTable').DataTable({
                "sPaginationType": "full_numbers",
                "aaSorting": [[0, 'asc']],
            });

            let dialog = $("#dialog-form").dialog({
                autoOpen: false,
                height: 300,
                width: 350,
                modal: true,
                close: clearForm
            });

            function clearForm() {
                $('#first-name').val('');
                $('#last-name').val('');
            }

            $("#create").button().on("click", function () {
                dialog.dialog("option", "title", "Create new professor");
                dialog.dialog("option", "buttons",
                    [
                        {
                            text: "Create",
                            click: createProfessor
                        },
                        {
                            text: "Close",
                            click: function () {
                                dialog.dialog("close");
                            }
                        }
                    ]
                );

                dialog.dialog("open");
            });

            function createProfessor() {
                let firstName = $('#first-name').val();
                let lastName = $('#last-name').val();

                $.ajax({
                    url: '/Professors/Create',
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ "FirstName": firstName, "LastName": lastName }),
                    success: function (data) {
                        let professorsTable = $('#ProfessorsTable').DataTable();

                        professorsTable.fnAddData([
                            data.Id,
                            data.FirstName,
                            data.LastName,
                            data.CreatedOn,
                            data.ModifiedOn,
                            data.IsDeleted,
                            data.DeletedOn]);

                        alert('Sucessfully created new professor!');
                    },
                    error: function (err) {
                        alert('Could not create new professor!');

                        console.log("Error ", err);
                    },
                    complete: function () {
                        $('#first-name').val('');
                        $('#last-name').val('');

                        dialog.dialog("close");
                    }
                });
            }

            $(".update").on("click", function () {
                let row = $(this).parent();
                let rowIndex = row.parent().index();
                let professorId = row.siblings('.professor-id').html();

                $('#first-name').val(row.siblings('.professor-first-name').html());
                $('#last-name').val(row.siblings('.professor-last-name').html());

                dialog.dialog("option", "title", "Update professor")
                dialog.dialog("option", "buttons",
                    [
                        {
                            text: "Update",
                            click: function () {
                                let firstName = $('#first-name').val();
                                let lastName = $('#last-name').val();

                                $.ajax({
                                    url: '/Professors/Update',
                                    dataType: 'json',
                                    type: 'POST',
                                    contentType: 'application/json',
                                    data: JSON.stringify({ id: professorId, "FirstName": firstName, "LastName": lastName }),
                                    success: function (data) {
                                        let professorsTable = $('#ProfessorsTable').DataTable();

                                        professorsTable.fnUpdate(data.FirstName, rowIndex, 1);
                                        professorsTable.fnUpdate(data.LastName, rowIndex, 2);
                                        professorsTable.fnUpdate(data.ModifiedOn, rowIndex, 4);

                                        alert('Sucessfully updated professor!');
                                    },
                                    error: function (err) {
                                        alert('Could not updated professor!');

                                        console.log("Error ", err);
                                    },
                                    complete: function () {
                                        $('#first-name').val('');
                                        $('#last-name').val('');

                                        dialog.dialog("close");
                                    }
                                });
                            }
                        },
                        {
                            text: "Close",
                            click: function () {
                                dialog.dialog("close");
                            }
                        }
                    ]
                );

                dialog.dialog("open");
            });
            
            $('.delete').click(function () {
                let row = $(this).parent();
                let professorId = row.siblings('.professor-id').html();

                $.ajax({
                    url: '/Professors/Delete',
                    dataType: 'json',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ "id": professorId }),
                    success: function (data) {
                        if (data == true) {
                            var professorsTable = $('#ProfessorsTable').DataTable();

                            professorsTable.fnDeleteRow(row);

                            alert('Sucessfully deleted professor with Id ' + professorId);
                        }
                    },
                    error: function (err) {
                        alert('Could not delete professor with Id ' + professorId);

                        console.log("Error ", err);
                    }
                });
            });
        });
    </script>
}